name: Create Pull Request
on:
  issue_comment:
    types: [created]

jobs:
  create_pull_request:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: update_branch_13  # Define the branch name as an environment variable

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check if Branch Exists Remotely
        id: check_branch_remotely
        run: |
          echo "Checking if branch $BRANCH_NAME exists remotely..."
          if git ls-remote --heads origin $BRANCH_NAME | grep -q "refs/heads/$BRANCH_NAME"; then
            echo "Branch $BRANCH_NAME already exists remotely."
            echo "::set-output name=result::exists"
          else
            echo "Branch $BRANCH_NAME does not exist remotely."
            echo "::set-output name=result::not_exists"
          fi

      - name: Checkout Existing Branch
        if: steps.check_branch_remotely.outputs.result == 'exists'
        run: |
          git fetch origin $BRANCH_NAME:$BRANCH_NAME
          git checkout $BRANCH_NAME

      - name: Create New Branch
        if: steps.check_branch_remotely.outputs.result == 'not_exists'
        run: |
          git checkout -b $BRANCH_NAME

      - name: Make Changes
        run: |
          echo "Hello, world 60!" > new-file.txt

      - name: Commit Changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Add new-file.txt via GitHub Actions"

      - name: Push Changes to Branch
        run: |
          git push origin $BRANCH_NAME

      - name: Create Pull Request
        id: create_pr
        run: |
          PR_TITLE="Propose changes from external repository"
          PR_BODY="This pull request was created automatically from changes made in a new branch."
          PR_HEAD="$BRANCH_NAME"
          PR_BASE="main"
          response=$(curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "title": "'"$PR_TITLE"'",
              "body": "'"$PR_BODY"'",
              "head": "'"$PR_HEAD"'",
              "base": "'"$PR_BASE"'"
            }' \
            "https://api.github.com/repos/${{ github.repository }}/pulls")
          echo "::set-output name=pull_request_number::$(echo "$response" | jq -r '.number')"
